{"version":3,"sources":["../src/JSONRPCClient.js"],"names":["Deferred","require","promiseEvent","JSONRPCError","_WebSocket","_fetch","EventEmitter","WebSocket","global","fetch","bind","JSONRPCClient","constructor","options","deferreds","Object","create","lastId","assign","defaultOptions","id","url","protocol","secure","host","port","path","websocket","message","Promise","resolve","reject","cb","err","socket","send","JSON","stringify","http","response","method","body","headers","Accept","then","res","_onmessage","json","_buildMessage","params","TypeError","batch","calls","promises","map","_send","promise","call","parameters","emit","readyState","_onresponse","error","result","deferred","_onrequest","onrequest","_onnotification","Array","isArray","object","_onobject","undefined","open","onclose","args","onmessage","event","parse","data","onopen","close","secret","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst Deferred = require(\"./Deferred\");\nconst promiseEvent = require(\"./promiseEvent\");\nconst JSONRPCError = require(\"./JSONRPCError\");\n\nconst _WebSocket = require(\"ws\");\nconst _fetch = require(\"node-fetch\");\nconst EventEmitter = require(\"events\");\n\nconst WebSocket = global.WebSocket || _WebSocket;\nconst fetch = global.fetch ? global.fetch.bind(global) : _fetch;\n\nclass JSONRPCClient extends EventEmitter {\n  constructor(options) {\n    super();\n    this.deferreds = Object.create(null);\n    this.lastId = 0;\n\n    Object.assign(this, this.constructor.defaultOptions, options);\n  }\n\n  id() {\n    return this.lastId++;\n  }\n\n  url(protocol) {\n    return (\n      protocol +\n      (this.secure ? \"s\" : \"\") +\n      \"://\" +\n      this.host +\n      \":\" +\n      this.port +\n      this.path\n    );\n  }\n\n  websocket(message) {\n    return new Promise((resolve, reject) => {\n      const cb = err => {\n        if (err) reject(err);\n        else resolve();\n      };\n      this.socket.send(JSON.stringify(message), cb);\n      if (global.WebSocket && this.socket instanceof global.WebSocket) cb();\n    });\n  }\n\n  async http(message) {\n    const response = this.fetch(this.url(\"http\"), {\n      method: \"POST\",\n      body: JSON.stringify(message),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    response.then(async res => {\n      this._onmessage(await res.json());\n    });\n\n    return response;\n  }\n\n  _buildMessage(method, params) {\n    if (typeof method !== \"string\") {\n      throw new TypeError(method + \" is not a string\");\n    }\n\n    const message = {\n      method,\n      \"json-rpc\": \"2.0\",\n      id: this.id()\n    };\n\n    if (params) Object.assign(message, { params });\n    return message;\n  }\n\n  async batch(calls) {\n    const promises = [];\n\n    const message = calls.map(([method, params]) => {\n      return this._buildMessage(method, params);\n    });\n\n    await this._send(message);\n\n    return message.map(({ id }) => {\n      const { promise } = (this.deferreds[id] = new Deferred());\n      return promise;\n    });\n  }\n\n  async call(method, parameters) {\n    const message = this._buildMessage(method, parameters);\n    await this._send(message);\n\n    const { promise } = (this.deferreds[message.id] = new Deferred());\n\n    return promise;\n  }\n\n  async _send(message) {\n    this.emit(\"output\", message);\n\n    const { socket } = this;\n    return socket && socket.readyState === 1\n      ? this.websocket(message)\n      : this.http(message);\n  }\n\n  _onresponse({ id, error, result }) {\n    const deferred = this.deferreds[id];\n    if (!deferred) return;\n    if (error) deferred.reject(new JSONRPCError(error));\n    else deferred.resolve(result);\n    delete this.deferreds[id];\n  }\n\n  _onrequest({ method, params }) {\n    return this.onrequest(method, params);\n  }\n\n  _onnotification({ method, params }) {\n    this.emit(method, params);\n  }\n\n  _onmessage(message) {\n    this.emit(\"input\", message);\n\n    if (Array.isArray(message)) {\n      for (const object of message) {\n        this._onobject(object);\n      }\n    } else {\n      this._onobject(message);\n    }\n  }\n\n  _onobject(message) {\n    if (message.method === undefined) this._onresponse(message);\n    else if (message.id === undefined) this._onnotification(message);\n    else this._onrequest(message);\n  }\n\n  async open() {\n    const socket = (this.socket = new this.WebSocket(this.url(\"ws\")));\n\n    socket.onclose = (...args) => {\n      this.emit(\"close\", ...args);\n    };\n    socket.onmessage = event => {\n      this._onmessage(JSON.parse(event.data));\n    };\n    socket.onopen = (...args) => {\n      this.emit(\"open\", ...args);\n    };\n\n    return promiseEvent(this, \"open\");\n  }\n\n  async close() {\n    const { socket } = this;\n    socket.close();\n    return promiseEvent(this, \"close\");\n  }\n}\n\nJSONRPCClient.defaultOptions = {\n  secure: false,\n  host: \"localhost\",\n  port: 80,\n  secret: \"\",\n  path: \"/jsonrpc\",\n  fetch,\n  WebSocket\n};\n\nmodule.exports = JSONRPCClient;\n"],"file":"JSONRPCClient.js"}